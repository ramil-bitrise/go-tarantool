name: testing

on:
  push:
  pull_request:
  pull_request_target:
    types: [labeled]
  workflow_dispatch:

jobs:
  run-tests-ce:
    # We want to run on external PRs, but not on our own internal
    # PRs as they'll be run by the push to the branch.
    #
    # The main trick is described here:
    # https://github.com/Dart-Code/Dart-Code/pull/2375
    #
    # Also we want to run it always for manually triggered workflows.
    if: (github.event_name == 'push') ||
      (github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name != github.repository) ||
      (github.event_name == 'workflow_dispatch')

    # We could replace it with ubuntu-latest after fixing the bug:
    # https://github.com/tarantool/setup-tarantool/issues/37
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        golang:
          - 1.13
        tarantool:
          - '1.10'
          - '2.8'
          - '2.10'
          - '2.x-latest'
        coveralls: [false]
        fuzzing: [false]
        include:
          - tarantool: '2.x-latest'
            coveralls: true
            golang: 1.13
          - tarantool: '2.x-latest'
            fuzzing: true
            golang: 1.18
            coveralls: false

    steps:
      - name: Clone the connector
        uses: actions/checkout@v2

      - name: Setup Tarantool ${{ matrix.tarantool }}
        if: matrix.tarantool != '2.x-latest'
        uses: tarantool/setup-tarantool@v2
        with:
          tarantool-version: ${{ matrix.tarantool }}

      - name: Setup Tarantool 2.x (latest)
        if: matrix.tarantool == '2.x-latest'
        run: |
          curl -L https://tarantool.io/pre-release/2/installer.sh | sudo bash
          sudo apt install -y tarantool tarantool-dev

      - name: Setup golang for the connector and tests
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.golang }}

      - name: Install test dependencies
        run: make deps

      - name: Run regression tests
        run: make test

      - name: Run regression tests with call_17
        run: make test TAGS="go_tarantool_call_17"

      - name: Run fuzzing tests
        if: ${{ matrix.fuzzing }}
        run: make fuzzing TAGS="go_tarantool_decimal_fuzzing"

      - name: Run tests, collect code coverage data and send to Coveralls
        if: ${{ matrix.coveralls }}
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make coveralls

      - name: Check workability of benchmark tests
        run: make bench-deps bench DURATION=1x COUNT=1

  run-tests-ee:
    # The same as for run-tests-ce, but it does not run on pull requests from
    # forks by default. Tests will run only when the pull request is labeled
    # with `full-ci`. To avoid security problems, the label must be reset
    # manually for every run.
    #
    # We need to use `pull_request_target` because it has access to base
    # repository secrets unlike `pull_request`.
    if: (github.event_name == 'push') ||
      (github.event_name == 'pull_request_target' &&
        github.event.pull_request.head.repo.full_name != github.repository &&
        github.event.label.name == 'full-ci') ||
      (github.event_name == 'workflow_dispatch')

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        sdk-version:
          - '1.10.11-0-gf0b0e7ecf-r470'
          - '2.8.3-21-g7d35cd2be-r470'
        coveralls: [false]
        fuzzing: [false]
        ssl: [false]
        include:
          - sdk-version: '2.10.0-1-gfa775b383-r486-linux-x86_64'
            coveralls: true
            ssl: true

    steps:
      - name: Clone the connector
        # `ref` as merge request is needed for pull_request_target because this
        # target runs in the context of the base commit of the pull request.
        uses: actions/checkout@v2
        if: github.event_name == 'pull_request_target'
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Clone the connector
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v2

      - name: Setup Tarantool ${{ matrix.sdk-version }}
        run: |
          ARCHIVE_NAME=tarantool-enterprise-bundle-${{ matrix.sdk-version }}.tar.gz
          curl -O -L https://${{ secrets.SDK_DOWNLOAD_TOKEN }}@download.tarantool.io/enterprise/${ARCHIVE_NAME}
          tar -xzf ${ARCHIVE_NAME}
          rm -f ${ARCHIVE_NAME}

      - name: Setup golang for the connector and tests
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      - name: Install test dependencies
        run: |
          source tarantool-enterprise/env.sh
          make deps

      - name: Run regression tests
        run: |
          source tarantool-enterprise/env.sh
          make test
        env:
          TEST_TNT_SSL: ${{matrix.ssl}}

      - name: Run regression tests with call_17
        run: |
          source tarantool-enterprise/env.sh
          make test TAGS="go_tarantool_call_17"
        env:
          TEST_TNT_SSL: ${{matrix.ssl}}

      - name: Run fuzzing tests
        if: ${{ matrix.fuzzing }}
        run: make fuzzing TAGS="go_tarantool_decimal_fuzzing"

      - name: Run tests, collect code coverage data and send to Coveralls
        if: ${{ matrix.coveralls }}
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEST_TNT_SSL: ${{matrix.ssl}}
        run: |
          source tarantool-enterprise/env.sh
          make coveralls

      - name: Check workability of benchmark tests
        run: make bench-deps bench DURATION=1x COUNT=1
